.TH atc 6 2025-5-31 0.1.0

.SH NAME
.B atc
- a game about airspace micromanagement

.SH SYNOPSIS
atc

.SH DESCRIPTION
When you first launch ATC, you will see the game grid and status panel. Beneath the game grid is also the command input, but it is currently empty.
.SS Game Grid
The game grid shows a radar-like map of your airspace where north is up. Several symbols denote objects within:
.IP
- Blank Spaces: Indicated with a ., does nothing.
.IP
- Path Markers: Indicated with a +, does nothing but serves as a visual aid.
.IP
- Exits: Indicated with a number, planes will enter your airspace here at 7000ft and some must be directed to exit here at 9000ft.
.IP
- Airports: Indicated with a directional caret followed by a number, some planes spawn landed here while others must be directed to land here. To launch a plane, set its altitude to a value greater than 0ft. To land one, its altitude must drop to 0ft on the same tick that the plane arrives in the square. Each airport has a runway direction denoted by the caret; Planes taking off will launch facing this way, while planes landing must enter from behind this direction.
.IP
- Beacons: Indicated with a * followed by a number, these can be used to specify when a plane should perform an action.
.IP
- Airplanes: Indicated with a letter followed by a number, the number represents the current flight level in thousands of feet. If the letter is lowercase, the plane is a jet which moves at a speed of 1 unit per tick, but if it is uppercase, the plane is a prop plane that moves at half the rate.

.SS Status Panel
The status panel provides more information about each plane in your airspace. At the top, it shows the current time in cycles and the score (number of planes safely navigated out of your airspace, by landing or exiting). Next, there are 3 column headers: plane (Plane callsign), dest (Destination), and cmd (Command). Dim rows indicate unmarked planes. Furthermore, rows showing "---" in the command column represent ignored planes.

.SS Command Input
To direct a plane, first enter its callsign letter. Capitalization does not matter. Next, enter an action. Actions include:
.RS
.IP
- Ignore (I): Dims the current plane's indicator in the status panel and game grid. Use this when a plane requires no further instructions and will safely reach its destination.
.IP
- Unmark (U): Dims the current plane's indicator until it reaches a beacon at which it has instructions. Use this when a plane is currently irrelevant but will later need to do more.
.IP
- Mark (M): Cancels a plane being unmarked or ignored.
.IP
- Altitude (A): Changes the ship's target flight level. Ships can move up or down 1000ft each time they move. Afterward, type a digit to send the plane straight to that flight level, or type + or - to relatively change the flight level.
.IP
- Heading (H or T): Changes the ship's direction. Ships can only turn 90 degrees each time they move. If the turn is greater than 90 degrees, the ship will turn 90 degrees the first time they move and 45 degrees the next time, leading to an overshoot. If the turn is 180 degrees, the plane will always turn clockwise. Afterward, type a direction key to specify the target direction. You can use the key circle around the S key (QWEADZXC) to specify an ordinal direction, the numpad (make sure numlock is on), or you can use vim bindings. With vim bindings, HJKL specifies a cardinal direction while the keys one row up (YUIO) species the ordinal direction 45 degrees clockwise of the key below.
.RE

After specifying an action, you can optionally press A or @ followed by the number of a beacon on the map. This will make the plane only do as directed the moment it arrives at that beacon. Planes can only have 1 action queued. I might later add support for delaying until other events.

.SH EXAMPLES
.TS
tab(@);
l l.
Keys@Action

aa9@Send plane A to flight level 9 (altitude 9000ft)
aa=2@Send plane A 2 flight levels higher (= and + both work)
aa-2@Send plane A 2 flight levels lower (_ works too)
atw@Set plane A's heading to 0 (due north)
atwa2@Set plane A's heading to 0 when it arrives at beacon 2
au@Unmark plane A until it arrives at a beacon where it will perform a delayed action
.TE
